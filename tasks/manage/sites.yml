---
- name: Remove default site
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
  when: nginx_remove_default_site
  notify:
    - Check Nginx config
    - Reload Nginx

- name: Manage the groups for our webroots
  group:
    name: "{{ item.user }}"
    state: "{{ item.state }}"
  when:
    - item.create_webroot is defined
    - item.create_webroot == true
  with_items: "{{ nginx_sites }}"

- name: Manage the user that will own the webroot
  user:
    name: "{{ item.user }}"
    group: "{{ item.user }}"
    groups: "{{ item.group }}"
    home: "{{ nginx_sites_folder }}/{{ item.id }}/"
    state: "{{ item.state }}"
  when:
    - item.create_webroot is defined
    - item.create_webroot == true
  with_items: "{{ nginx_sites }}"

- name: Create the webroot
  file:
    dest: "{{ nginx_sites_folder }}/{{ item.id }}/{{ item.webroot }}"
    state: directory
    owner: "{{ item.user|default('root') }}"
    group: "{{ item.group|default('root') }}"
  when:
    - item.state == 'present'
    - item.create_webroot is defined
    - item.create_webroot == true
  with_items: "{{ nginx_sites }}"

- name: Define the sites
  template:
    src: site.j2
    dest: "/etc/nginx/sites-available/{{ item.id }}"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ nginx_sites }}"
  when: item.state != 'removed'
  notify:
    - Check Nginx config
    - Reload Nginx

- name: Enable sites
  file:
    src: "/etc/nginx/sites-available/{{ item.id }}"
    dest: "/etc/nginx/sites-enabled/{{ item.id }}"
    state: link
  with_items: "{{ nginx_sites }}"
  when: item.state is not defined or item.state == 'present'
  notify:
    - Check Nginx config
    - Reload Nginx

- name: Disable sites
  file:
    path: "/etc/nginx/sites-enabled/{{ item.id }}"
    state: absent
  with_items: "{{ nginx_sites }}"
  when:
    - item.state is defined
    - item.state == 'absent'
  notify:
    - Check Nginx config
    - Reload Nginx

- name: Remove sites
  file:
    path: "/etc/nginx/sites-available/{{ item.id }}"
    state: absent
  with_items: "{{ nginx_sites }}"
  when:
    - item.state is defined
    - item.state == 'removed'
